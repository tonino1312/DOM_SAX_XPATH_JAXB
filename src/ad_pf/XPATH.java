/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ad_pf;

import java.awt.Graphics;
import java.awt.Image;
import java.util.HashSet;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author Charlie
 */
public final class XPATH extends javax.swing.JDialog {
    FondoPanel fondo=new FondoPanel();
    DOM dom;

    /**
     * Creates new form XPATH
     *
     * @param parent
     * @param modal
     * @param dom
     */
    public XPATH(java.awt.Frame parent, boolean modal, DOM dom) {
        super(parent, modal);
        this.setContentPane(fondo);
        initComponents();        
        this.dom = dom; // Asignar el objeto DOM pasado como par√°metro a la variable de instancia, para comunicar el arbol del jframe con el jDIalog.
        ocultarComboBox();
    }

    private XPATH(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupCambiar = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaResultado = new javax.swing.JTextArea();
        jComboBoxMarca = new javax.swing.JComboBox<>();
        jComboBoxModelo = new javax.swing.JComboBox<>();
        jRadioButtonMarca = new javax.swing.JRadioButton();
        jRadioButtonModelo = new javax.swing.JRadioButton();
        jButtonSeleccionar = new javax.swing.JButton();
        jRadioButtonColor = new javax.swing.JRadioButton();
        jComboBoxColor = new javax.swing.JComboBox<>();
        jRadioButtonPuerta = new javax.swing.JRadioButton();
        jComboBoxPuerta = new javax.swing.JComboBox<>();
        jRadioButtonID = new javax.swing.JRadioButton();
        jRadioButtonExtra = new javax.swing.JRadioButton();
        jComboBoxExtra = new javax.swing.JComboBox<>();
        jComboBoxID = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonConsulta = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jRadioButtonPotencia = new javax.swing.JRadioButton();
        jComboBoxPotencia = new javax.swing.JComboBox<>();
        jRadioButtonPrecio = new javax.swing.JRadioButton();
        jComboBoxPrecio = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTextAreaResultado.setBackground(new java.awt.Color(187, 187, 187));
        jTextAreaResultado.setColumns(20);
        jTextAreaResultado.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jTextAreaResultado.setForeground(new java.awt.Color(51, 51, 51));
        jTextAreaResultado.setRows(5);
        jTextAreaResultado.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(jTextAreaResultado);

        jComboBoxMarca.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxMarca.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxModelo.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxModelo.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxModelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroupCambiar.add(jRadioButtonMarca);
        jRadioButtonMarca.setText("Marca");

        buttonGroupCambiar.add(jRadioButtonModelo);
        jRadioButtonModelo.setText("Modelo");

        jButtonSeleccionar.setBackground(new java.awt.Color(204, 255, 255));
        jButtonSeleccionar.setText("Seleccionar");
        jButtonSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeleccionarActionPerformed(evt);
            }
        });

        buttonGroupCambiar.add(jRadioButtonColor);
        jRadioButtonColor.setText("Color");

        jComboBoxColor.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxColor.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroupCambiar.add(jRadioButtonPuerta);
        jRadioButtonPuerta.setText("Puertas");

        jComboBoxPuerta.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxPuerta.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxPuerta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroupCambiar.add(jRadioButtonID);
        jRadioButtonID.setText("ID");
        jRadioButtonID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonIDActionPerformed(evt);
            }
        });

        buttonGroupCambiar.add(jRadioButtonExtra);
        jRadioButtonExtra.setText("Extras");

        jComboBoxExtra.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxExtra.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxExtra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxID.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxID.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxIDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1.setText("SELECCIONE  LA CONSULTA QUE DESEA");

        jButtonConsulta.setBackground(new java.awt.Color(204, 204, 255));
        jButtonConsulta.setText("Consulta");
        jButtonConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultaActionPerformed(evt);
            }
        });

        jButtonSalir.setBackground(new java.awt.Color(255, 102, 102));
        jButtonSalir.setFont(new java.awt.Font("Dialog", 1, 8)); // NOI18N
        jButtonSalir.setForeground(new java.awt.Color(102, 102, 102));
        jButtonSalir.setText("X");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        buttonGroupCambiar.add(jRadioButtonPotencia);
        jRadioButtonPotencia.setText("Potencia");

        jComboBoxPotencia.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxPotencia.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxPotencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroupCambiar.add(jRadioButtonPrecio);
        jRadioButtonPrecio.setText("Precio");

        jComboBoxPrecio.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxPrecio.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxPrecio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jRadioButtonColor, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jRadioButtonModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jRadioButtonMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jRadioButtonID, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBoxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButtonPotencia, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBoxPotencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButtonExtra, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBoxExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButtonPuerta, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBoxPuerta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButtonPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBoxPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jButtonSeleccionar)
                                .addGap(29, 29, 29)
                                .addComponent(jButtonConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonMarca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonModelo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonColor)
                            .addComponent(jComboBoxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonPotencia)
                            .addComponent(jComboBoxPotencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonPrecio)
                            .addComponent(jComboBoxPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonPuerta)
                            .addComponent(jComboBoxPuerta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonExtra)
                            .addComponent(jComboBoxExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonConsulta)
                            .addComponent(jButtonSeleccionar))
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    //Metodo para actualizar los Combo Box
    public void actualizarModeloJComboBox(String consultaXPath, JComboBox comboBox) {
        // Obtener todos los nodos del elemento especificado en la consulta XPath
        NodeList nodos = dom.buscarNodosXPath(consultaXPath);

        // Crear un conjunto para almacenar los valores √∫nicos del elemento especificado
        Set<String> valoresUnicos = new HashSet<>();
        for (int i = 0; i < nodos.getLength(); i++) {
            Node nodo = nodos.item(i);
            valoresUnicos.add(nodo.getTextContent());
        }

        //  Agregar los valores al modelo del JComboBox
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        for (String valor : valoresUnicos) {
            modelo.addElement(valor);
        }
        comboBox.setModel(modelo);
    }
  
    //Metodo distinto para poner el Color y el atirbuto Hex a la par
    public void actualizarModeloColor() {
        //Buscar nodos de color en el documento XML
        NodeList nodos = dom.buscarNodosXPath("/coches/coche/color");
        //Inicializar conjunto para almacenar los colores √∫nicos
        Set<String> coloresUnicos = new HashSet<>();

        //Recorrer los nodos de color obtenidos
        for (int i = 0; i < nodos.getLength(); i++) {
            //Obtener el nodo de color actual
            Node nodoColor = nodos.item(i);
            //Extraer el contenido del nodo de color y el atributo hex
            String color = nodoColor.getTextContent();
            String hex = ((Element) nodoColor).getAttribute("hex");
            //Agregar una cadena que concatena el color y el atributo hex al conjunto coloresUnicos
            coloresUnicos.add(color + " | " + hex);
        }

        //Crear un nuevo DefaultComboBoxModel llamado modelo y llenarlo con las cadenas de colores y sus valores hexadecimales almacenados en el conjunto coloresUnicos
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        for (String colorHex : coloresUnicos) {
            modelo.addElement(colorHex);
        }
        jComboBoxColor.setModel(modelo);
    }

    //Metodo para Ocultar ComboBox al iniciar el JDialog
    public void ocultarComboBox() {
        jComboBoxMarca.setVisible(false);
        jComboBoxModelo.setVisible(false);
        jComboBoxColor.setVisible(false);
        jComboBoxPuerta.setVisible(false);
        jComboBoxExtra.setVisible(false);
        jComboBoxID.setVisible(false);
        jComboBoxPrecio.setVisible(false);
        jComboBoxPotencia.setVisible(false);
    }

    //Boton para Seleccionar la Consulta ComboBox
    private void jButtonSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeleccionarActionPerformed

        if (jRadioButtonMarca.isSelected()) {
            jComboBoxMarca.setVisible(true);
            jComboBoxModelo.setVisible(false);
            jComboBoxColor.setVisible(false);
            jComboBoxPuerta.setVisible(false);
            jComboBoxExtra.setVisible(false);
            jComboBoxID.setVisible(false);
            jComboBoxPrecio.setVisible(false);
            jComboBoxPotencia.setVisible(false);
            String consultaXPath = "/coches/coche/marca";
            actualizarModeloJComboBox(consultaXPath, jComboBoxMarca);

        } else if (jRadioButtonModelo.isSelected()) {
            jComboBoxModelo.setVisible(true);
            jComboBoxMarca.setVisible(false);
            jComboBoxColor.setVisible(false);
            jComboBoxPuerta.setVisible(false);
            jComboBoxExtra.setVisible(false);
            jComboBoxID.setVisible(false);
            jComboBoxPrecio.setVisible(false);
            jComboBoxPotencia.setVisible(false);
            String consultaXPath = "/coches/coche/modelo";
            actualizarModeloJComboBox(consultaXPath, jComboBoxModelo);
            
        } else if (jRadioButtonColor.isSelected()) {
            jComboBoxColor.setVisible(true);
            jComboBoxModelo.setVisible(false);
            jComboBoxMarca.setVisible(false);
            jComboBoxPuerta.setVisible(false);
            jComboBoxExtra.setVisible(false);
            jComboBoxID.setVisible(false);
            jComboBoxPrecio.setVisible(false);
            jComboBoxPotencia.setVisible(false);
            actualizarModeloColor();
            
        } else if (jRadioButtonPuerta.isSelected()) {
            jComboBoxPuerta.setVisible(true);
            jComboBoxColor.setVisible(false);
            jComboBoxModelo.setVisible(false);
            jComboBoxMarca.setVisible(false);
            jComboBoxExtra.setVisible(false);
            jComboBoxID.setVisible(false);
            jComboBoxPrecio.setVisible(false);
            jComboBoxPotencia.setVisible(false);
            String consultaXPath = "/coches/coche/puertas";
            actualizarModeloJComboBox(consultaXPath, jComboBoxPuerta);
            
        } else if (jRadioButtonExtra.isSelected()) {
            jComboBoxExtra.setVisible(true);
            jComboBoxPuerta.setVisible(false);
            jComboBoxColor.setVisible(false);
            jComboBoxModelo.setVisible(false);
            jComboBoxMarca.setVisible(false);
            jComboBoxID.setVisible(false);
            jComboBoxPrecio.setVisible(false);
            jComboBoxPotencia.setVisible(false);
            String consultaXPath = "/coches/coche/extras/extra";
            actualizarModeloJComboBox(consultaXPath, jComboBoxExtra);

        } else if (jRadioButtonID.isSelected()) {
            jComboBoxID.setVisible(true);
            jComboBoxExtra.setVisible(false);
            jComboBoxPuerta.setVisible(false);
            jComboBoxColor.setVisible(false);
            jComboBoxModelo.setVisible(false);
            jComboBoxMarca.setVisible(false);
            jComboBoxPrecio.setVisible(false);
            jComboBoxPotencia.setVisible(false);
            String consultaXPath = "/coches/coche/@id";
            actualizarModeloJComboBox(consultaXPath, jComboBoxID);
            
        } else if (jRadioButtonPrecio.isSelected()) {
            jComboBoxPrecio.setVisible(true);
            jComboBoxID.setVisible(false);
            jComboBoxExtra.setVisible(false);
            jComboBoxPuerta.setVisible(false);
            jComboBoxColor.setVisible(false);
            jComboBoxModelo.setVisible(false);
            jComboBoxMarca.setVisible(false);
            jComboBoxPotencia.setVisible(false);
            String consultaXPath = "/coches/coche/precio";
            actualizarModeloJComboBox(consultaXPath, jComboBoxPrecio);
            
        } else if (jRadioButtonPotencia.isSelected()) {
            jComboBoxPotencia.setVisible(true);
            jComboBoxPrecio.setVisible(false);
            jComboBoxID.setVisible(false);
            jComboBoxExtra.setVisible(false);
            jComboBoxPuerta.setVisible(false);
            jComboBoxColor.setVisible(false);
            jComboBoxModelo.setVisible(false);
            jComboBoxMarca.setVisible(false);
            String consultaXPath = "/coches/coche/potencia";
            actualizarModeloJComboBox(consultaXPath, jComboBoxPotencia);
        }
    }//GEN-LAST:event_jButtonSeleccionarActionPerformed
   
    //Boton para salir del jDialog
    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed
    
    //M√©todo par obtener los Valores de los Elementos (Marca, Modelo, Color,Precio, Puertas)
    private String obtenerValorNodo(String etiqueta, Node nodo) {
        NodeList nodos = ((Element) nodo).getElementsByTagName(etiqueta);
        if (nodos.getLength() > 0) {
            Node nodoEtiqueta = nodos.item(0);
            return nodoEtiqueta.getTextContent();
        } else {
            return "";
        }
    }
    
    //Metodo para obtener los Valores de los Elementos Extra dentro de Extras
    private String obtenerValoresExtras(String nombreNodo, Node nodoPadre) {
        StringBuilder sb = new StringBuilder();
        NodeList nodosHijos = ((Element) nodoPadre).getElementsByTagName(nombreNodo);
        for (int i = 0; i < nodosHijos.getLength(); i++) {
            sb.append("  Extra: ").append(nodosHijos.item(i).getTextContent()).append("\n");
        }
        return sb.toString();
    }
   
    //Metodo pa obtener el Valor del Atributo Hex del Elemento Color
    private Node obtenerNodoHex(String etiqueta, Node nodoPadre) {
        NodeList listaNodos = ((Element) nodoPadre).getElementsByTagName(etiqueta);
        if (listaNodos != null && listaNodos.getLength() > 0) {
            return listaNodos.item(0);
        } else {
            return null;
        }
    }
    
    //M√©todo  para obtener la Consulta Final mediante el ID
    private String obtenerConsultaID(NodeList nodos) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < nodos.getLength(); i++) {
            Node nodoCoche = nodos.item(i);
            sb.append("ID: ").append(((Element) nodoCoche).getAttribute("id")).append("\n");
            sb.append("Marca: ").append(obtenerValorNodo("marca", nodoCoche)).append("\n");
            sb.append("Modelo: ").append(obtenerValorNodo("modelo", nodoCoche)).append("\n");
            sb.append("Color: ").append(obtenerValorNodo("color", nodoCoche)).append("\n");
            sb.append("C√≥digo Color: ").append(((Element) obtenerNodoHex("color", nodoCoche)).getAttribute("hex")).append("\n");;
            sb.append("Potencia: ").append(obtenerValorNodo("potencia", nodoCoche)).append("\n");
            sb.append("Precio: ").append(obtenerValorNodo("precio", nodoCoche)).append("\n");
            sb.append("Puertas: ").append(obtenerValorNodo("puertas", nodoCoche)).append("\n");
            sb.append("Extras: \n").append(obtenerValoresExtras("extra", nodoCoche));
            sb.append("------------------------------------");
        }
        return sb.toString();
    }

    //M√©todo para obtener el resto de Consultas
    private String obtenerConsulta(NodeList nodos) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < nodos.getLength(); i++) {
            Node nodoCoche = nodos.item(i).getParentNode();
            sb.append("\nID: ").append(((Element) nodoCoche).getAttribute("id")).append("\n");
            sb.append("Marca: ").append(obtenerValorNodo("marca", nodoCoche)).append("\n");
            sb.append("Modelo: ").append(obtenerValorNodo("modelo", nodoCoche)).append("\n");
            sb.append("Color: ").append(obtenerValorNodo("color", nodoCoche)).append("\n");
            sb.append("C√≥digo Color: ").append(((Element) obtenerNodoHex("color", nodoCoche)).getAttribute("hex")).append("\n");;
            sb.append("Potencia: ").append(obtenerValorNodo("potencia", nodoCoche)).append("\n");
            sb.append("Precio: ").append(obtenerValorNodo("precio", nodoCoche)).append("\n");
            sb.append("Puertas: ").append(obtenerValorNodo("puertas", nodoCoche)).append("\n");
            sb.append("Extras: \n").append(obtenerValoresExtras("extra", nodoCoche));
            sb.append("------------------------------------");
        }
        return sb.toString();
    }

    //Bot√≥n que implementa todos los M√©todos para hacer la consulta que se Seleccione
    private void jButtonConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultaActionPerformed
        if (jRadioButtonID.isSelected()) {
            String valorSeleccionado = jComboBoxID.getSelectedItem().toString(); // obtener valor seleccionado en el JComboBox
            String consulta = "/coches/coche[@id='" + valorSeleccionado + "']"; // construir consulta XPath
            NodeList nodos = dom.buscarNodosXPath(consulta); // buscar nodos que cumplen la condici√≥n
            jTextAreaResultado.setText(obtenerConsultaID(nodos));

        } else if (jRadioButtonMarca.isSelected()) {
            String valorSeleccionado = jComboBoxMarca.getSelectedItem().toString(); // obtener valor seleccionado en el JComboBox
            String consulta = "/coches/coche/marca[.='" + valorSeleccionado + "']"; // construir consulta XPath
            NodeList nodos = dom.buscarNodosXPath(consulta); // buscar nodos que cumplen la condici√≥n
            jTextAreaResultado.setText(obtenerConsulta(nodos));

        } else if (jRadioButtonModelo.isSelected()) {
            String valorSeleccionado = jComboBoxModelo.getSelectedItem().toString(); // obtener valor seleccionado en el JComboBox
            String consulta = "/coches/coche/modelo[.='" + valorSeleccionado + "']"; // construir consulta XPath
            NodeList nodos = dom.buscarNodosXPath(consulta); // buscar nodos que cumplen la condici√≥n
            jTextAreaResultado.setText(obtenerConsulta(nodos));

        } else if (jRadioButtonPotencia.isSelected()) {
            String valorSeleccionado = jComboBoxPotencia.getSelectedItem().toString(); // obtener valor seleccionado en el JComboBox
            String consulta = "/coches/coche/potencia[.='" + valorSeleccionado + "']"; // construir consulta XPath
            NodeList nodos = dom.buscarNodosXPath(consulta); // buscar nodos que cumplen la condici√≥n
            jTextAreaResultado.setText(obtenerConsulta(nodos));

        } else if (jRadioButtonPrecio.isSelected()) {
            String valorSeleccionado = jComboBoxPrecio.getSelectedItem().toString(); // obtener valor seleccionado en el JComboBox
            String consulta = "/coches/coche/precio[.='" + valorSeleccionado + "']"; // construir consulta XPath
            NodeList nodos = dom.buscarNodosXPath(consulta); // buscar nodos que cumplen la condici√≥n
            jTextAreaResultado.setText(obtenerConsulta(nodos));

        } else if (jRadioButtonPuerta.isSelected()) {
            String valorSeleccionado = jComboBoxPuerta.getSelectedItem().toString(); // obtener valor seleccionado en el JComboBox
            String consulta = "/coches/coche/puertas[.='" + valorSeleccionado + "']"; // construir consulta XPath
            NodeList nodos = dom.buscarNodosXPath(consulta); // buscar nodos que cumplen la condici√≥n
            jTextAreaResultado.setText(obtenerConsulta(nodos));

        } else if (jRadioButtonColor.isSelected()) {
            String valorSeleccionado = jComboBoxColor.getSelectedItem().toString(); // obtener valor seleccionado en el JComboBox
            String[] partes = valorSeleccionado.split(" \\| ");
            String color = partes[0];
            String hex = partes[1];
            String consulta = "/coches/coche/color[.='" + color + "' and @hex='" + hex + "']";
            NodeList nodos = dom.buscarNodosXPath(consulta); // buscar nodos que cumplen la condici√≥n
            jTextAreaResultado.setText(obtenerConsulta(nodos));
        } else if (jRadioButtonExtra.isSelected()) {
            String valorSeleccionado = jComboBoxExtra.getSelectedItem().toString(); // obtener valor seleccionado en el JComboBox
            String consulta = "/coches/coche/extras[extra='" + valorSeleccionado + "']"; // construir consulta XPath
            NodeList nodos = dom.buscarNodosXPath(consulta); // buscar nodos que cumplen la condici√≥n
            jTextAreaResultado.setText(obtenerConsulta(nodos));

        }
    }//GEN-LAST:event_jButtonConsultaActionPerformed

    private void jComboBoxIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxIDActionPerformed

    private void jRadioButtonIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonIDActionPerformed
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XPATH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XPATH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XPATH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XPATH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            XPATH dialog = new XPATH(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCambiar;
    private javax.swing.JButton jButtonConsulta;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonSeleccionar;
    private javax.swing.JComboBox<String> jComboBoxColor;
    private javax.swing.JComboBox<String> jComboBoxExtra;
    private javax.swing.JComboBox<String> jComboBoxID;
    private javax.swing.JComboBox<String> jComboBoxMarca;
    private javax.swing.JComboBox<String> jComboBoxModelo;
    private javax.swing.JComboBox<String> jComboBoxPotencia;
    private javax.swing.JComboBox<String> jComboBoxPrecio;
    private javax.swing.JComboBox<String> jComboBoxPuerta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonColor;
    private javax.swing.JRadioButton jRadioButtonExtra;
    private javax.swing.JRadioButton jRadioButtonID;
    private javax.swing.JRadioButton jRadioButtonMarca;
    private javax.swing.JRadioButton jRadioButtonModelo;
    private javax.swing.JRadioButton jRadioButtonPotencia;
    private javax.swing.JRadioButton jRadioButtonPrecio;
    private javax.swing.JRadioButton jRadioButtonPuerta;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaResultado;
    // End of variables declaration//GEN-END:variables
    class FondoPanel extends JPanel{
        private Image imagen;
        
        @Override
        public void paint(Graphics g){
            imagen=new ImageIcon(getClass().getResource("/imagenes/fondo2png.png")).getImage();
            
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            
            setOpaque(false);
            
            super.paint(g);
            
        }
    }
}
